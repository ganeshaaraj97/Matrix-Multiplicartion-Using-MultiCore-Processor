module processor_a_tb();
      reg clock;
		reg [ 1: 0] status;
		reg [ 7: 0] dm_out;
		reg [ 15: 0] im_out;
		//output [ 15: 0] bus_out;
		wire dm_en;
		wire [ 15: 0] pc_out;
		wire [ 15: 0] ar_out;
		wire  end_process;
		wire [ 15: 0] r2_out;

		processor dut (.clock(clock), .dm_out(dm_out), .im_out(im_out),.dm_en(dm_en), .pc_out(pc_out), .ar_out(ar_out), .status(status),.r2_out(r2_out),.end_process(end_process));
      
		
  initial begin
  #50;
  clock = 1'd0; status =2'd0 ; dm_out = 8'd0; im_out = 16'd0; #100;
  clock = 1'd0; status =2'd1 ; dm_out = 8'd6; im_out = 16'd12; #100;
  clock = 1'd0; status =2'd1 ; dm_out = 8'd11; im_out = 16'd7; #100;
  clock = 1'd0; status =2'd1 ; dm_out = 8'd19; im_out = 16'd5; #100;
																																																			
  
  end
  
  
  always begin
    #50;
	 clock = ~clock;
  end
  
 endmodule